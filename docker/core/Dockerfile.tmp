FROM --platform=linux/amd64 ubuntu

# replace shell with bash so we can source files
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Prepare workdir
WORKDIR /root/dfx

# Install required packages
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    build-essential \
    ca-certificates \
    curl \
    pkg-config \
    libssl-dev \
    llvm-dev \
    clang \
    cmake \
    rsync \
    libunwind-dev \
    git

# Clean
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Rust and Cargo
ENV RUST_BACKTRACE=full
ENV RUSTUP_HOME=/rust
ENV CARGO_HOME=/cargo
ENV PATH=/cargo/bin:/rust/bin:$PATH
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y && \
    rustup target add wasm32-unknown-unknown && \
    cargo install ic-wasm

# Install NVM, Node and NPM
ENV NODE_VERSION=18
ENV NVM_DIR=/root/.nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash && \
    . $NVM_DIR/nvm.sh && \
    nvm install $NODE_VERSION && \
    nvm alias default $NODE_VERSION && \
    nvm use default && \
    npm install -g npm@latest
ENV NODE_PATH=$NVM_DIR/v$NODE_VERSION/lib/node_modules
ENV PATH=$NVM_DIR/v$NODE_VERSION/bin:$PATH

# Install Dfinity SDK
RUN sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"